volumes:
  pgdata:
services:
  dagster:
    build: .
    depends_on:
      - postgres
    ports:
      - 3000:3000
    volumes:
      - ./dagster_home:/dagster_home
    restart: always
    develop:
      # Create a `watch` configuration to update the app
      #
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: ./dags
          target: /app/dags
          # Exclude the project virtual environment
          ignore:
            - .venv/

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - pgdata:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  clickhouse:
    image: 'clickhouse/clickhouse-server:${CHVER:-latest}'
    user: '101:101'
    container_name: clickhouse
    hostname: clickhouse
    volumes:
      - ./clickhouse/clickhouse-server/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./clickhouse/clickhouse-server/users.xml:/etc/clickhouse-server/users.d/users.xml
    ports:
      - '127.0.0.1:8123:8123'
      - '127.0.0.1:9000:9000'
    depends_on:
      - clickhouse-keeper

  clickhouse-keeper:
    image: 'clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}'
    user: '101:101'
    container_name: clickhouse-keeper
    hostname: clickhouse-keeper
    volumes:
      - ./clickhouse/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml
    ports:
      - '127.0.0.1:9181:9181'